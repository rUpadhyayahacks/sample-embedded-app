{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  render() {\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return __jsx(Query, {\n      query: GET_PRODUCTS_BY_ID,\n      variables: {\n        ids: store.get('ids')\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n      if (error) return __jsx(\"div\", null, error.message);\n      console.log(data);\n      return __jsx(Card, null, __jsx(\"p\", null, \"stuff here\"));\n    });\n  }\n\n}\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/r/Desktop/sample-embedded-app/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ResourceListWithProducts","React","Component","render","twoWeeksFromNow","Date","now","toDateString","ids","get","data","loading","error","message","console","log"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,IAAT,EACIC,YADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,SAJJ,QAKQ,kBALR;AAMA,OAAOC,KAAP,MAAkB,UAAlB;AAIA,MAAMC,kBAAkB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA/B;;AA4BA,MAAMS,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AACnDC,EAAAA,MAAM,GAAG;AACL,UAAMC,eAAe,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,OAAtB,EAA+BC,YAA/B,EAAxB;AAEF,WACE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAER,kBAAd;AAAkC,MAAA,SAAS,EAAE;AAAES,QAAAA,GAAG,EAAEV,KAAK,CAACW,GAAN,CAAU,KAAV;AAAP;AAA7C,OACC,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,KAAD,KAA8B;AAC3B,UAAID,OAAJ,EAAa,OAAO,mCAAP;AACb,UAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACC,OAAZ,CAAP;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,aACE,MAAC,IAAD,QACE,8BADF,CADF;AAKD,KAVH,CADF;AAcD;;AAlBkD;;AAqBpD,eAAeV,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, \n    ResourceList,\n    Stack,\n    TextStyle,\n    Thumbnail,\n } from '@shopify/polaris';\nimport store from 'store-js';\n\n\n\nconst GET_PRODUCTS_BY_ID = gql`\n  query getProducts($ids: [ID!]!) {\n    nodes(ids: $ids) {\n      ... on Product {\n        title\n        handle\n        descriptionHtml\n        id\n        images(first: 1) {\n          edges {\n            node {\n              originalSrc\n              altText\n            }\n          }\n        }\n        variants(first: 1) {\n          edges {\n            node {\n              price\n              id\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nclass ResourceListWithProducts extends React.Component {\n    render() {\n        const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n\n      return (\n        <Query query={GET_PRODUCTS_BY_ID} variables={{ ids: store.get('ids') }}>\n        {({ data, loading, error }) => {\n            if (loading) return <div>Loadingâ€¦</div>;\n            if (error) return <div>{error.message}</div>;\n            console.log(data);\n            return (\n              <Card>\n                <p>stuff here</p>\n              </Card>\n            );\n          }}\n        </Query>\n      );\n    }\n  }\n  \n   export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}